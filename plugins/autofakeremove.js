/* Copyright (C) 2021 ABU.
Licensed under the  GPL-3.0 License;
you may not use this file except in compliance with the License.
ABU SER ----Â»Â»Â» ABU
*/


/*
 __________   _________     ________________  ________  
     EDUTHO BUT ERROR VANNAL ENNOD PARAYANDA
     
     NJN FIX CHEYIYILLA HEHEEðŸ˜‚ðŸ˜‚
     
     THANKS TO MY SUPPORTERS
_______  __________  ___________  ________    __________     
*/

const toPDF = require("custom-soffice-to-pdf");
const Asena = require('../events');
const { MessageType, Mimetype } = require('@adiwajshing/baileys');
const got = require('got');
const ffmpeg = require('fluent-ffmpeg');
const Config = require('../config');


Asena.addCommand({pattern: 'topdf ?(.*)', fromMe: false, desc: 'convert img-pdf' , dontAddCommandList: true }, async (message, match) => {


if (!message.reply_message)
      return await message.sendMessage('reply to image');
    if (message.reply_message.audio || message.reply_message.video || message.reply_message.sticker || message.reply_message.pdf) return message.sendMessage('NOT_SUPPORTED');
     
   var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });
   
      ffmpeg(location)
                .save('st.pdf')
                .on('end', async () => {
                  
   
         await message.client.sendMessage(message.jid,fs.readFileSync('st.pdf'),  MessageType.document , {
            filename: 'generated by whitedevil ' + ".pdf",
            mimetype: Mimetype.pdf,quoted: message.data
          });
      },
      (err) => console.log(`topdf : ${err}`)
    );
  }

);
